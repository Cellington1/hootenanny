#
#  Export Make file
#

HOOT_OPTS+= -D osm2ogr.ops=hoot::DecomposeBuildingRelationsVisitor
HOOT_OPTS+= -D services.db.writer.overwrite.map=true -D services.db.writer.create.user=true
HOOT_OPTS+= -D services.db.writer.email=test@test.com -D services.db.reader.email=test@test.com

# Add the option to append
HOOT_OPTS+= -D ogr.append.data=true

#DB_URL=postgresql://hoot:hoottest@localhost:5432/hootYou
OP_PG_URL=PG:"$(PG_URL)"


OP_TRANSLATION=$(HOOT_HOME)/$(translation)
OP_OUTPUT_FILE=$(outputname).$(outputtype)
OP_OUTPUT=$(outputfolder)/$(outputname).$(outputtype)
ZIP_OUTPUT=$(outputname).zip
INPUT_PATH=$(DB_URL)/$(input)
REMOVE_REVIEW=-C RemoveReview2Pre.conf
OP_ZIP=cd "$(outputfolder)" && zip -r "$(ZIP_OUTPUT)" "$(OP_OUTPUT_FILE)"


# Hardcoded. There should be a better location for these
TEMPLATE_PATH=$(HOOT_HOME)/translations-local/template
TDS61_TEMPLATE=$(TEMPLATE_PATH)/TDS_6_1.gdb
TDS40_TEMPLATE=$(TEMPLATE_PATH)/TDS_4_0.gdb


ifeq "$(outputtype)" "shp"
	OP_ZIP=cd "$(outputfolder)/$(outputname)" && zip -r "$(outputfolder)/$(ZIP_OUTPUT)" *
endif

ifeq "$(inputtype)" "file" 
	INPUT_PATH=$(input)
endif

#####



###
# Osm2Ogr
###
step1:
ifeq ("$(outputtype)","wfs")
	hoot --osm2ogr $(REMOVE_REVIEW) -D ogr.writer.pre.layer.name=$(outputname)_ $(HOOT_OPTS) "$(OP_TRANSLATION)" "$(INPUT_PATH)" $(OP_PG_URL)
else ifeq ("$(outputtype)","osm")
	mkdir -p "$(outputfolder)"	
	hoot --convert -D services.db.writer.create.user=true -D services.db.reader.email='test@test.com' "$(INPUT_PATH)" "$(OP_OUTPUT)"
	cd "$(outputfolder)" && zip -r "$(ZIP_OUTPUT)" "$(OP_OUTPUT_FILE)"
else
	mkdir -p "$(outputfolder)"

ifneq ("$(wildcard $(TDS61_TEMPLATE))","")
ifeq "$(translation)" "TDSv61.js"
	cp -r $(TDS61_TEMPLATE) $(OP_OUTPUT)
else
ifeq "$(translation)" "TDSv40.js"
	cp -r $(TDS40_TEMPLATE) $(OP_OUTPUT)
endif
endif # Else TDSv40

endif # Template

	hoot osm2ogr $(REMOVE_REVIEW) $(HOOT_OPTS) "$(OP_TRANSLATION)" "$(INPUT_PATH)" "$(OP_OUTPUT)"
	$(OP_ZIP)

endif # Shape/FGDB



