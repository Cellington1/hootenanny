<?xml version="1.0" encoding="UTF-8"?>
<ProcessDefinition configVersion="3.0.0" processVersion="1.0.0" xmlns="http://www.deegree.org/processes/java"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.deegree.org/processes/java http://schemas.deegree.org/processes/java/3.0.0/java.xsd">
	<Identifier>PrepareItemsForReview</Identifier>
	<JavaClass>hoot.services.controllers.wps.PrepareItemsForReviewProcesslet</JavaClass>
  <Title>Prepare Items for Review Service</Title>
  <Abstract><![CDATA[
  <DESCRIPTION>When conflated data is first to be reviewed, the service must parse the review tag information from the entire dataset in order to update the related review tables in the services database. The purpose of writing the information in the OSM review tags in the database to separate database tables is to allow for querying against review data and preventing duplicate reviews from occurring. Therefore, this method must be called at the very beginning of reviewing a map's data, and it is being made asynchronous to account for the potentially longer delay that could occur when operating on larger conflated datasets. Items may not be retrieved for review if no prepare job has been previously run or if one is running while a retrieve is attempted. This service returns a ID for the preparation job which can be tracked with the Hootenanny Job Service.
  </DESCRIPTION>
  <EXAMPLE>
  <URL>http://localhost:8080/hoot-services/ogc/PrepareItemsForReview</URL>
  <REQUEST_TYPE>POST</REQUEST_TYPE>
  <INPUT>Please refer to the wiki page: https://insightcloud.digitalglobe.com/redmine/projects/hootenany/wiki/User_-_Conflated_Data_Review_Service_2</INPUT>
   <OUTPUT>Please refer to the wiki page: https://insightcloud.digitalglobe.com/redmine/projects/hootenany/wiki/User_-_Conflated_Data_Review_Service_2</OUTPUT>
   </EXAMPLE>
  ]]></Abstract>
	<InputParameters>
	<!-- Any changes to these default parameters must also be reflected in 
  $HOOT_HOME/hoot-services/src/main/src/main/java/hoot/services/controllers/review/PrepareItemsForReviewProcesslet.java
  and vice versa. -->
		<LiteralInput minOccurs="1" maxOccurs="1">
      <Identifier>mapId</Identifier>
      <Title>Map ID</Title>
      <Abstract>string; required; ID string or unique name of the map associated with the reviewable conflated data</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#string">string</DataType>
    </LiteralInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>overwriteExistingData</Identifier>
      <Title>Overwrite Existing Data</Title>
      <Abstract>boolean; optional; if true, will overwrite any data for the map that has been previously prepared for review; if false, will cause an empty string to be returned for the job ID if the map has data that has already been prepared for review; in the case that a prepare job is currently running for the specified map, this parameter will be ignored; defaults to false</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#boolean">boolean</DataType>
      <DefaultValue>false</DefaultValue>
    </LiteralInput>
	</InputParameters>
	<OutputParameters>
		<LiteralOutput>
      <Identifier>jobId</Identifier>
      <Title>Job Id</Title>
      <Abstract>This output a unique job ID string for tracking the progress of the conflated data 
      prepare job.</Abstract>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#string">string</DataType>
    </LiteralOutput>
	</OutputParameters>
</ProcessDefinition>
