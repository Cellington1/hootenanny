<?xml version="1.0" encoding="UTF-8"?>
<ProcessDefinition configVersion="3.0.0" processVersion="1.0.0" xmlns="http://www.deegree.org/processes/java"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.deegree.org/processes/java http://schemas.deegree.org/processes/java/3.0.0/java.xsd">
	<Identifier>GetReviewableItems</Identifier>
	<JavaClass>hoot.services.controllers.wps.GetReviewableItemsProcesslet</JavaClass>
  <Title>Get Reviewable Items Service</Title>
  <Abstract><![CDATA[
  <DESCRIPTION>
  Once the conflated data has been prepared for review, clients may call this to get one or more items to present to the user for reviewing. In many cases, clients might only request a single item for review with each call (default setting), but the option to retrieve more than one at a time is being made available, in case it ends up being necessary.
  The response returns a set of reviewable items containing an OSM element ID and type, as well as a suggested geospatial bounds for each item its to be reviewed against (smallest bounds that encompasses the reviewable item and the item its reviewed against, plus some small buffer). The response returns OSM data in XML format inside the JSON response, since the iD editor already knows how to parse OSM XML for display. The ID's of the response items correspond to the OSM ID's of the elements returned by a Hootenanny map query request against the services database. Its not intended that element unique ID's be shown to end users, however, the client will be responsible for updating the unique ID contained in the OSM review tags for elements split into new elements during the review process, since this operation is not feasible to perform in the server.
  IMPORTANT: If an reviewable item has its associated OSM element deleted from the services database, that item will not be returned in this query, despite the fact it was never reviewed. For now, it is the responsibility of clients to not delete reviewable elements until they have been reviewed.
  </DESCRIPTION>
  <EXAMPLE>
  <URL>http://localhost:8080/hoot-services/ogc/GetReviewableItems?mapId=1&numItems=2&highestReviewScoreFirst=true&reviewScoreThresholdMinimum=0.8&geospatialBounds=-77.09655761718749,38.89958342598271,-77.09106445312499,38.90385833966776&displayBoundsZoomAdjust=-0.0015&boundsDisplayMethod=reviewableAndReviewAgainstItemCombined</URL>
  <REQUEST_TYPE>GET</REQUEST_TYPE>
  <INPUT></INPUT>
   <OUTPUT></OUTPUT>
   </EXAMPLE>
  ]]></Abstract>
	<!-- Any changes to these default parameters must also be reflected in 
  $HOOT_HOME/hoot-services/src/main/src/main/java/hoot/services/controllers/review/GetReviewableItemsProcesslet.java
  and vice versa. -->
	<InputParameters>
		<LiteralInput minOccurs="1" maxOccurs="1">
      <Identifier>mapId</Identifier>
      <Title>Map ID</Title>
      <Abstract>string; required; ID string or unique name of the map associated with the reviewable conflated data</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#string">string</DataType>
    </LiteralInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>numItems</Identifier>
      <Title>Number of Items to Retrieve</Title>
      <Abstract>integer; optional; number of review items to retrieve; optional; defaults to 1; max = 5000 (configurable)</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#integer">integer</DataType>
      <DefaultValue>1</DefaultValue>
      <!-- allowed values doesn't work in deegree yet  -->
      <!-- TODO: is there any way to coordinate this with the services config? -->
      <!-- AllowedValues>
        <Range>
          <MinimumValue>1</MinimumValue>
          <MaximumValue>50000</MaximumValue>
        </Range>
      </AllowedValues --> 
    </LiteralInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>highestReviewScoreFirst</Identifier>
      <Title>Return Highest Review Score First</Title>
      <Abstract>boolean; optional; when specified as true, from the available review items returns the ones with the highest score first; optional; default = true</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#boolean">boolean</DataType>
      <DefaultValue>true</DefaultValue>
    </LiteralInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>reviewScoreThresholdMinimum</Identifier>
      <Title>Review Score Threhold Minimum</Title>
      <Abstract>double; optional; items with a review score lower than this threshold will not be returned; defaults to 0.5</Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#double">double</DataType>
      <DefaultValue>0.50</DefaultValue>
      <!-- allowed values doesn't work in deegree yet  -->
      <!-- AllowedValues>
        <Range>
          <MinimumValue>0.01</MinimumValue>
          <MaximumValue>1.00</MaximumValue>
        </Range>
      </AllowedValues -->
    </LiteralInput>
    <BoundingBoxInput minOccurs="0" maxOccurs="1">
      <Identifier>geospatialBounds</Identifier>
      <Title>Geospatial Bounds</Title>
      <Abstract>This parameter specifies the geospatial bounds that items should fall within.  
      For GET requests, the parameter is a comma delimited string of the form: 
      minLon,minLat,maxLon,maxLat,CRS - 
      e.g. geospatialBounds=71.63,41.75,-70.78,42.90,urn:ogc:def:crs:EPSG:6.6:4326</Abstract>
      <DefaultCRS>ESPG:4326</DefaultCRS>
    </BoundingBoxInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>displayBoundsZoomAdjust</Identifier>
      <Title>Display Bounds Zoom Adjust</Title>
      <Abstract>This parameter allows for automatically adjusting the display bounds returned
      for all review item pairs by a constant amount.  Negative values zoom the bounds out; 
      positive valueszoom the it in.
      </Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#double">double</DataType>
      <DefaultValue>-0.0015</DefaultValue>
      <!-- allowed values doesn't work in deegree yet  -->
      <!-- AllowedValues>
        <Range>
          <MinimumValue>-1.00</MinimumValue>
          <MaximumValue>1.00</MaximumValue>
        </Range>
      </AllowedValues -->
    </LiteralInput>
    <LiteralInput minOccurs="0" maxOccurs="1">
      <Identifier>boundsDisplayMethod</Identifier>
      <Title>Bounds Display Method</Title>
      <Abstract>This parameter specifies how the review item pair should be displayed.  Valid 
      values are: reviewableItemOnly, reviewAgainstItemOnly, reviewableAndReviewAgainstItemCombined
      </Abstract>
      <Metadata href="http://schemas.mrgeo.org/wps/0.1.0/#Icon" about="formulaIcon"/>
      <DataType reference="http://www.w3.org/TR/xmlschema-2/#string">string</DataType>
      <DefaultValue>reviewableAndReviewAgainstItemCombined</DefaultValue>
      <!-- allowed values doesn't work in deegree yet  -->
      <!-- AllowedValues>
      </AllowedValues -->
    </LiteralInput>
	</InputParameters>
	<OutputParameters>
		<LiteralOutput>
			<Identifier>reviewableItems</Identifier>
			<Title>Reviewable Items</Title>
			<Abstract>This output contains a JSON structure with reviewable conflated data items.</Abstract>
			<DataType reference="http://www.w3.org/TR/xmlschema-2/#string">string</DataType>
		</LiteralOutput>
	</OutputParameters>
</ProcessDefinition>
