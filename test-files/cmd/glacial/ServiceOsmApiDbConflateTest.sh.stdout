
STEP 1: Cleaning out the osm api db and setting it up with an initial single user...
 setval 
--------
      1
(1 row)


STEP 2: Writing a dataset to an osm api db...
 setval 
--------
      2
(1 row)

 setval 
--------
   4325
(1 row)

 setval 
--------
    375
(1 row)

 setval 
--------
      1
(1 row)


STEP 3: Reading the contents back out of the osm api db...
11:28:11.357 INFO  ...oot/core/io/OsmApiDbReader.cpp( 111) Executing OSM API read query against all element types...

STEP 4: Querying a subset aoi for the data out of the osm api db into a hoot api db...

STEP 5: Reading the first dataset contents back out of the hoot api db...

STEP 6: Writing a second dataset over the same aoi to a hoot api db...

STEP 7: Reading the second dataset contents back out of the hoot api db...

STEP 8: Conflating the two datasets...

Reading the conflated contents back out of the hoot api db...

STEP 10: Creating a changeset that is the diff between the osm api db input data and the conflated output...

STEP 11: Writing the changeset back to the osm api db...
11:28:19.451 INFO  .../cpp/hoot/core/io/OsmApiDb.cpp( 551) Executing changeset SQL queries against OSM API database...
11:28:19.757 INFO  .../cpp/hoot/core/io/OsmApiDb.cpp( 592) Changeset SQL queries execute finished against OSM API database.

STEP 12: Reading the complete final contents back out of the osm api db and verifying it...
11:28:19.869 INFO  ...oot/core/io/OsmApiDbReader.cpp( 111) Executing OSM API read query against all element types...
