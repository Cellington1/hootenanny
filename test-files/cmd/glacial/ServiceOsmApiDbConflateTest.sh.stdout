reference dataset:  test-files/DcGisRoads.osm
secondary dataset:  test-files/DcTigerRoads.osm
AOI:  -77.040,38.892,-77.033,38.896

STEP 1: Cleaning out the osm api db and initializing it for use...
 setval 
--------
      1
(1 row)


STEP 2: Writing the reference dataset to an osm api db...
 setval 
--------
      2
(1 row)

 setval 
--------
   4325
(1 row)

 setval 
--------
    375
(1 row)

 setval 
--------
      1
(1 row)


STEP 3: Reading the reference dataset back out of the osm api db into a file...
11:49:20.714 INFO  ...oot/core/io/OsmApiDbReader.cpp( 111) Executing OSM API read query against all element types...

STEP 4: Querying out a cropped aoi for the reference dataset from the osm api db and writing it into a hoot api db...

STEP 5: Reading the cropped reference dataset back out of the hoot api db into a file...

STEP 6: Writing a secondary dataset over the aoi to the hoot api db...

STEP 7: Reading the second dataset back out of the hoot api db into a file...

STEP 8: Conflating the two datasets...

Reading the conflated contents back out of the hoot api db...

STEP 10: Writing a SQL changeset file that is the difference between the cropped reference input dataset and the conflated output...

STEP 11: Writing the changeset SQL back to the osm api db...
11:49:28.585 INFO  .../cpp/hoot/core/io/OsmApiDb.cpp( 551) Executing changeset SQL queries against OSM API database...
11:49:28.916 INFO  .../cpp/hoot/core/io/OsmApiDb.cpp( 592) Changeset SQL queries execute finished against OSM API database.

STEP 12: Reading the entire contents of the osm api db into a file and verifying it...
11:49:29.030 INFO  ...oot/core/io/OsmApiDbReader.cpp( 111) Executing OSM API read query against all element types...
