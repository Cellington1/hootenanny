
== Hootenanny User Interface

=== Background 

Hootenanny deploys with an interactive web-based user interface adapted from the MapBox iD Editor. This offers several benefits including its open license that allows users to customize and add functionality, along with an in-depth editing capability that was originally designed for interactive editing of OSM features. Hootenanny is designed to facilitate automated and semi-automated conflation of critical Foundation GEOINT features in the topographic domain, namely roads (polylines), buildings (polygons), and points-of-interest (POI’s) (points). Conflation happens at the data set level, where the user’s workflow determines the best reference dataset and source content, geometry and attributes, to transfer to the output map. The input data must be normalized to allow processing and matching of features and attributes from different schemas. Hootenanny internal processing leverages the key value pair structure of OpenStreetMap (OSM) for improved utility and applicability to broader user groups, e.g. normalized attributes can be used to aid in feature matching and OSM’s free tagging system allows the map to include an unlimited number of attributes describing each feature. Depending on the data and selected conflation options, the process of resolving ambiguous features is handled by an interactive conflict resolution workflow. Hootenanny cues up conflicts and drives the user to each conflict to make the appropriate geometry or attribute fix. Additionally, the user has the option to edit other features they may come across that need correcting while working through the conflict cue. For users that do not want to perform this manual editing or want to accept the automated solution in full, there is the option to accept all or discard all conflicts. This becomes a user choice and ultimately a risk assessment between accepting geometry and attribute errors resulting from automated algorithms versus the use purpose of the end product.

The general case of the Hootenanny conflation workflow is shown in <<HootConflationWorkflow>> and depicts the high-level steps necessary to conflate data and generate an output map in Hootenanny. It is important for the user to understand these functions as each have implications on the conflated results. The squares represent a specific conflation task, while the oval canisters represent a database function. The workflow is described as follows:

[[HootConflationWorkflow]]
.Hootenanny Conflation Workflow.
image::user/images/id/hoot_general_workflow.png[]

This guide is intended as a general purpose reference to understand various components of the software functionality and provide simple use cases that demonstrate how to leverage these capabilities using publically available data sets. The document is broken down into sections by application functionality such as adding new layers, editing map data, translation between different application schemas and performing conflation using reference and non-reference data sets. For background on the project history, command line interface, javascript api, and other technical details please refer to the Hootenanny User Guide. 

=== Accessing Hootenanny

Hootenanny can be accessed from a web browser using the standard URL http://(your_servername):port/hootenanny-id/. The current version of Hootenanny iD is only supported in Chrome (recommended) and/or Chromium.

[[HootiD-UILayout]]
.Hootenanny User Interface Layout. *A*: Layer editing tool bar for adding/editing Points, Lines and Polygons and Saving edits; *B*: Map navigation and background layer configuration tool bar (DigitalGlobe Global Basemap selected as background layer); *C*: Layer display; *D*: Hootenanny version info (click on Hootenanny); *E*: Hootenanny UI Manage link; *F*: Map View. San Diego, CA; Basemap Imagery is DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_UI_layout.png[]

=== Adding Layers 

During conflation, source data sets are merged based on user-specified conflation parameters to create an output layer that is ultimately superior in terms of complete geometry and attribution. Two datasets are required to perform a conflation; _Reference_ and _Secondary_ Data. To add a new Reference Dataset to the map, click on the _Add Reference Dataset_ button on the left side. A list of available layers will appear in the drop down menu to select from. Repeat for secondary data sets. Note that in order to conflate any two data sets they must be first <<Hoot-iD_Datasets,imported>> into Hootenanny to be listed as an available layer. 

.Add Dataset Button
image::user/images/id/hoot_adddataset.png[scaledwidth="25%"]

When selecting a layer, users must select either a color or use the default OSM symbology provided in the color picker.

.Layer color picker.
image::user/images/id/hoot_color_picker.png[]

[[HootiD-Addinglayers]]
.Displaying user data in Hootenanny. Port Au Prince, Haiti; OSM Highway data (blue) and MGCP data (pink) from link:$$http://www.arcgis.com/home/item.html?id=1a253aad38274c1a93b17eafdf885853as$$[ESRI] website; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_Haiti_roads.png[] 

NOTE: The order in which layers are added to Hootenanny is important. For Reference and Average conflation, the reference data is assumed to contain the reference geometry during conflation and whichever layer is selected to contain the reference attribution provided in the conflation options. For Cookie Cutter & Horizontal conflation, the reference data are typically higher fidelity dense urban data while the secondary data source are sparser regional level map data. 

[[HootiD-EditingLayers]]
=== Editing Features in Hootenanny

Similar to editing data in link:$$http://wiki.openstreetmap.org/wiki/Editing$$[OpenStreetMap.org], users can select any point, line or polygon feature and modify both the geometry and attribution displayed. To aid the user during the editing process, Hootenanny provides the additional functionality of allowing users to toggle between different display tag schemas (OSM, TDS 6.1, and TDS 4.0) by changing the Filter By Type drop down to the desired tag format.  This does _not_ modify the underlying data but merely changes the displayed tag schema in the left panel.

[[Filter-by-Type]]
.Changing the displayed tag schema in Hootenanny. The left image shows the selected feature displayed in OSM while right side shows the identical feature in TDSv61. Note the differences in the _All Tags_ (e.g. TDS uses F_CODE). Haiti OSM highway data displayed with DigitalGlobeBasemap (GBM) as background imagery. 
image::user/images/id/hoot_OSMvTDS.png[scaledwidth="75%"]

NOTE: Users can view any element's attributes by simply hovering the mouse over a feature but in order to edit, scroll to display all tags, or switch to the TDS 6.x/4.x tag schema(s), a single feature must be selected.  

==== Modifying Layer Attributes

When a feature has been selected (or a new one has been added), it is possible to modify both its <<ModifyLayerGeometry,geometry>> (e.g. moving a point, adding vertices, modifying the shape of a polygon, etc..) and the associated attribute values. First it's important to note that each tag schema maintains it's own set of default presets. For example, clicking on the Secondary Road icon using the OSM schema displays a list of suggested presets based on the schema and element type (poi, line, area). If a type does not appear listed, type the name (e.g. Culvert) in the Search window that appears when you click on the icon. To learn more about a tag such as Secondary Road, click on the 'i' button next to the preset and an image will pop-up as shown below with a link to the OpenStreetMap Wiki page for that feature. Values for each field can be edited by clicking in each attribute and either typing or selecting from a set of pre-populated values. Note that both OSM and TDS schemas will only support a set of limited values for certain fields so it's best to consult domain subject matter experts when modifying. 

[[ViewingPresets]]
.Click on the info 'i' to bring up more information about a preset.
image::user/images/id/hoot_preset_info.png[scaledwidth="25%"]
 
The _All Tags_ section shown below contains all of the feature tags for a layer that have been translated from their native data structure to Hootenanny during <<Hoot-iD_Datasets,import>>. If an expected tag does not appear, it might be a good time to revisit the translation steps described in <<TranslationAssistant>>, <<HootiD-Translation>> or review the original source data. New fields can be added by clicking on the Add Field drop down menu and selecting an appropriate value. Additional tags can be added by clicking on the '+' button at the bottom of the All tags shown below. To delete or display additional info about a tag, click on either the trash can or info icons that appear next to each tag. Note that any changes will not be final to a layer until the user clicks on Save to commit the edits to the Hootenanny database. For OSM tags, users can check the 'Sort A-Z' box to sort tags in alphabetical order. 

.Displaying all OSM feature tags in Hootenanny.
image::user/images/id/hoot_alltags_OSM.png[scaledwidth="25%"]

[[ModifyLayerGeometry]]
==== Modifying Layer Geometry

To modify the feature geometry, click on the feature to expose the editing palette that pertains to the particular selected feature. Note that each unique geometry type and shape present their own options that may not display for other features. For instance, selecting a linear feature exposes editing options to straighten or change the directionality whereas clicking on a feature that traces a square, rectangle or circular path exposes options to make the feature a square or circle. Editing options include adding additional nodes by double clicking on a line segment, moving a node to manually modify the shape or path of a line or polygon, moving a point, and deleting features. For a list of shortcut keys to each operation, see <<Hoot-iD_Shortcuts, short-cuts>>.
 
.Editing layer geometry in Hootenanny. Port Au Prince, Haiti; OSM Highway data (blue) and MGCP data (pink) from link:$$http://www.arcgis.com/home/item.html?id=1a253aad38274c1a93b17eafdf885853as$$[ESRI] website; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_edit_geom.png[scaledwidth="50%"] 

In order to save any edits applied to a layer click on the _Save_ button displayed on top in the map view or to revert to a previous edit. Save will commit any edits on a particular layer to the hoot database where as the Undo/Redo buttons will step back/forward through any modifications applied to either that layer’s geometry or attribution. The number displayed next to the Save button indicates the number of edits that will be committed to the database for a given session.

.Saving edits in Hootenanny. The user applied the editing option to square the corners of line feature to expose the Save button above. The number of edits made before committing (2 in this example) is displayed in addition to options for undo/redo changes. Port Au Prince, Haiti; OSM Highway data (blue) and MGCP data (pink) from link:$$http://www.arcgis.com/home/item.html?id=1a253aad38274c1a93b17eafdf885853as$$[ESRI] website; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_edit_save.png[scaledwidth="75%"] 

=== Adding New Features 

It is also possible to create new features for a given layer in Hootenanny iD but any new feature added must be done with at least one layer present. Note that any new features added without an associated layer cannot be saved. The ability to create new features within the GUI is a key component of the OpenStreetMap version of iD Editor and additional background and editing workflows can be found online via link:$$https://www.openstreetmap.org/edit?editor=id$$[OpenStreetMap-iD's] help menu. A brief background is provided here for general user orientation. 

To add a new point, click on the Point button appearing in the Map Viewer or use the '1' shortcut key. Points can be used to represent features such as shops, restaurants, parks and monuments, etc. They mark a specific location and describe the feature based on the OSM/TDS tag relationship. Once a new point is added to the map, a panel will appear on the map prompting you to select an appropriate feature type (park, cafe, etc) and any associated tags. Note that even though OSM values are presented, the data is stored on the database using the TDS tag equivalent. The next time it is edited within Hootenanny it will display the values using the english translated LTDS schema.

.Adding a new point in Hootenanny. A cafe POI was generated with name = 'Starbucks' and other associated attribution. Washington, D.C.; OSM vector data; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_adddata.png[scaledwidth="50%"] 

To add a new linear feature, click on the Line button or use the '2' shortcut key and begin digitizing on the map. A pop-up message will appear if you would like to snap to an existing linear feature. Click on a single location to begin the linear feature and then continue clicking until feature has been completed. Double-click to complete the process and edit any attribution as needed. Repeat process for a new Area feature. Click Save to save all edits or step back/forward using the undo/redo buttons as needed.

==== Copying Features/Tags

In certain circumstances it may be useful to utilize copy/paste functionality when editing layers and addressing conflict reviews within Hootenanny.  For example, if users need to create multiple copies of a selected feature (or set of features) within the same map layer (e.g. foot path, bridge, secondary road, POI, etc...) or they would like to copy attributes from a feature (or multiple selected features) in the reference layer to similar feature in the secondary layer when reviewing conflicts, they could use the following currently supported work flows.  

===== Copying Features/Tags Within a Single Layer 

To copy a feature(s) within a single layer, select the feature or set of features that you wish to copy using the left-mouse button or by clicking on the red/blue conflict review table field.  Note that you can select multiple features by pressing the _shift_ key as you select each feature.  When multiple features are selected they will appear listed on the left under the _Selected_ items. Type `ctrl-c` to copy the selected feature(s) and then `ctrl+v` to display the copied feature(s) on the map.  Once the copied feature(s) appear on the map they can be placed in the desired location.

.Copying Feature Geometry/Tags within a Layer.  The selected item, a Monument named Major General Rochambeau is copied and pasted.  Note that the `name` tag is not copied to the newly created feature.
image::user/images/id/hoot_copy_feature.png[scaledwidth="75%"]

To copy tags within a single layer from one feature to another (or multiple selected features), select the feature to copy and type `ctrl+c`, then select the target feature(s) to paste and use `shift+ctrl+v`.  This will replace all of the selected feature tags (except name and those listed in the note below) with the copied source tags.     

NOTE: Hootenanny does not currently support copying feature geometry between multiple layers and excludes certain tags such as the feature name, uuid, etc. due to inherited OSM iD functionality.  If a user attempts to paste a set of copied features into a secondary layer the application session will likely be disrupted.

===== Copying Tags Between Two Layers

When reviewing conflicts or performing any manual editing with two layers, it maybe useful to copy tags from a selected feature(s) in the Reference layer to a feature(s) in a Secondary layer.  For example, if during conflation a set of features has been identified as needing review, a user can use the copy/paste tag functionality to ensure that a set of attributes are included in the merged output.  Click on any field in either the blue/red conflict review table (selecting either the blue/red field will depend on which represents the reference or secondary layer) to select a feature to copy from (or by clicking on the feature geometry) and hit `ctrl+c` to copy the tags.  Then select to target feature(s) to paste to by clicking on target field and hit `shift+ctrl+v`.  This will copy all of the tags to the selected feature(s).  You may see a pop-up message indicating that an error occurred due to two active layer being present.  If that is the case you can turn off the source layer by unchecking it from the background settings (shortcut key = b) temporarily before pasting.  If you have all tags displayed you will notice that in addition to the pre-existing tags all copied tags from the source feature will appear listed.  

NOTE: Any duplicate tags in the target feature will be overwritten during copy/paste.

=== Hootenanny Map Tools

The Hootenanny map portion of the interface mirrors the Open Street Map iD editor link:$$https://www.openstreetmap.org/edit?editor=id$$[OpenStreetMap-iD] with additional customization to support conflation workflows. Map navigation options appear in the upper right portion of the map viewer noted by B in figure <<HootiD-UILayout>>. To view a maptip and/or <<Hoot-iD_Shortcuts,shortcut>>, hover the cursor over each button and information concerning the functionality of a particular feature will appear. 

It is also possible to display a line length or polygon area by clicking the 'i' key when a feature has been selected.  Display units can be toggled between feet (imperial) and meters (metric) by clicking on either option.  To measure the distance between any two points, select line or hit the 2 shortcut and click from the starting to ending point with the feature info displayed.  This will give you a measurement between two locations.  

.Display length of feature on map.  DC POI data from Geonames.org with DigitalGlobe Basemap imagery.
image::user/images/id/hoot_measure.png[scaledwidth="50%"]

NOTE: When creating a line between two POIs to measure a distance value, use the undo buttons to remove the line rather than the delete palette tool.  This is because the linear feature replaces the original POIs with a new start and end node and deleting the feature removes both the original POIs and the newly created line.

==== Map Navigation

Clicking on either '+' or '-' buttons will zoom the user one level higher/lower in the map. Alternatively users can use the middle scroll wheel of their mouse to zoom up or down levels. To open the map to your current location, click on the arrow button noting that some browser security settings do not allow users to share their location information.  

==== Background Settings

Clicking on the Background Settings button (shorcut key = b) opens up a panel displaying different background layer display options. To set the brightness for the background layer, click on the palette next to Background for 100%, 75%, 50%, or 25% brightness. Users can select from a range of publicly available basemaps such as Bing aerial imagery, MapQuest Open Aerial, Mapbox Satellite, OpenStreetMap, or create a custom basemap URL using the following URL template shown below. Any user uploaded <<Hoot-iD_Basemap,Basemap>> images will appear in this panel. For those with access to DigitalGlobe GBM/EGD imagery service via mapproxy, users can select from a variety of display options such as the Most Recent, Most Aesthetic Color, Least Cloud Cover, etc.. 

.DigitalGlobe GBM/EGD display options.
image::user/images/id/hoot_GBM.png[scaledwidth="25%"]

Below is a URL template for creating your own basemap URL service. Click on the _Custom_ option and enter a basemap url with the coordinates and zoom level similar to the example shown below. The x and y coords represent the center point and the zoom represents the zoom level. Creating a custom basemap tiled service using a georeferenced geotif/tif is described in <<Hoot-iD_Basemap,Manage Basemap>>. 

------
http://(hosted_imagery_service_name)/OSM/{zoom}/{x}/{y}.png
------

[[Hoot-iD_Background]]
.Background Settings in Hootenanny with the Custom Basemap URL options displayed.
image::user/images/id/hoot_background.png[scaledwidth="75%"] 


==== Image Carousel

The image carousel displays all of the available images by timestamp and sensor that are in the DigitalGlobe GBM/EGD service if the service has been enabled. Users can select a particular DigitalGlobe image from the listed sensors/dates displayed in the carousel by clicking on the Image Carousel button or typing the 'c' shortcut key.

.DG Image Carousel. Washington, D.C.; link:$$http://dcatlas.dcgis.dc.gov/catalog/download.asp?downloadID=88&downloadTYPE=ESRI$$[DC GIS Roads]; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_image_carousel.png[]

NOTE: Currently GBM/EGD image thumbnails do not display.

==== Map Data

The Map Data settings allow users to add map overlay information such as a photo overlay from link:$$http://www.mapillary.com/map$$[Mapillary] or a local GPX file, modify the display settings for vector data, and filter existing Map Features. _Mapillary_ is a crowd source platform that allows users to upload street level photos (not commonly used for conflation but part of the core OSM iD interface) when available. Users can also drag and drop a local GPX (GPS generated data set) or use the file browser to add. 

Fill Areas allows users to select from three different options for displaying relevant vector data. The first option is _No Fill_ or Wireframe (shortcut key = W) which makes it easier to display background imagery. _Partial Fill_ displays fill areas around their inner edges only. _Full Fill_ displays features with complete fill turned. Finally, users can filter Map Features of interest by simply checking or unchecking the boxes next to the common map features such as Points, Major Roads, Buildings, etc. To access the settings click on the Map Data (shortcut key = F) highlighted in blue in <<Hoot-iD_MapData>>.  

[[Hoot-iD_MapData]]
.Map Data settings in Hootenanny.
image::user/images/id/hoot_mapdata.png[scaledwidth="25%"]


==== Help

To access help for the standard features within iD, click on the bookmark icon below the Background Settings button or type the 'h' shortcut key. This feature is included within the standard iD Editor and includes background information on all OSM editing related functionality. It has been included in Hootenanny for continuity purposes noting that numerous tutorials on standard iD functionality such as adding/editing OSM features can be found in this help guide.

.Accessing the iD editor Help page within Hootenanny.
image::user/images/id/hoot_helpmenu.png[scaledwidth="25%"] 

[[Hoot-iD_Shortcuts]]
=== Hootenanny Shortcuts

The following table provides all of the available shortcut keys for accessing Hootenanny functionality.

|======
| *Shortcut* | *Action*
| 1 | Create new Point feature
| 2 | Create new Line feature
| 3 | Create new Area feature
| ctrl + z | Undo
| ctrl + y | Redo
| ctrl + s | Save
| ctrl + c | Copies feature geometry/tags
| ctrl + v | Pastes selected feature geometry/tags
| ctrl + backspace | Deletes object permanently
| shift + ctrl + v | Pastes copied source layer tags into selected target layer tags
| shift + left mouse click | selects multiple features geometry/tags within layer
| alt + b | Switches b/w layers during post-conflation conflict review
| alt + n | Toggles layer visibility on/off
| + | Zoom in 1 level
| - | Zoom out 1 level
| / | Toggles display of overview map
| a | Continue drawing a line at the selected node
| b | Display background layer switcher 
| c | Open Image carousel
| d | Disconnect lines/areas from selected node
| f | Displays Map Data Settings
| h | Display in-editor help/documentation 
| i | Display feature info such as length and centroid coords
| m | Move selected feature / Merge during POI Review
| n | Advances to next review during Conflict Review
| o | Make feature a circle (must be poly or closed loop line) 
| p | Steps back to previous review during Conflict Review
| r | rotate object around center / Resolved during Conflict Review
| s | Straighten a line or square corner of area
| x | Split line into two at selected node
| ↓,↑,←,→ | pan map in direction
| v | Make line go in opposite direction
| w | Toggles Wireframe vector display on/off
| Enter/Esc | stops drawing feature
| F11 | sets browser to full screen 
|======

===  Conflation Workflows

In order to view the available map conflation options, two layers must be added to the map as shown in <<HootiD-conflationoptions>>. Once added, click on the _Conflate_ button in the left panel to set up each conflation option. 

[[HootiD-conflationoptions]]
.Performing a reference conflation of Haiti Roads data in Hootenanny. Port Au Prince, Haiti; OSM Highway data (blue) and MGCP data (pink) from link:$$http://www.arcgis.com/home/item.html?id=1a253aad38274c1a93b17eafdf885853as$$[ESRI] website; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_refconf_haitiroads.png[]  

NOTE: The Reference layer is assumed to contain the reference geometry when selecting Reference / Horizontal conflation. When performing Cookie Cutter & Horizontal conflation, the Reference layer determines the alpha-shape used for the cookie cut operation while the Secondary layer is used as the dough from which the data is clipped. 

==== Conflation Options

The following section provides background on the available parameters that can be configured for a conflation job using Hootenanny.

===== Save As

The name of the conflated data output that you would like to save. By default, a file name Merged_* is populated in this field but this can be overwritten manually by entering a specific layer name.

===== Type

There are *four* types of conflation that are exposed in the UI: *_Reference, Average, Cookie Cutter & Horizontal_* and *_Advanced_*.

1) *_Reference Conflation_*

_Reference_ conflation assumes that the reference layer (layer 1) contains the most accurate geometry but provides the user with the option to select either input source as the attribute reference. For example, if a user sets layer 1 as the reference geometry and layer 2 as the attribute reference, the conflated map would contain the following:

* matched feature geometry - layer 1 (as defined by first data set loaded)
* unmatched feature geometry - layer 1 and layer 2
* matched attribute fields - layer 2 (as defined by the attribute reference layer)
* unmatched attribute fields - if the attribute is populated it will be transferred to the conflated map from the appropriate input source. If not, a default value will get assigned based on the output specification for that field and data type.

2) *_Average Conflation_*

_Average_ conflation maintains the general shape of the two inputs, produces close to an exact average, and avoids large data perturbations. Using the road data example, the operator starts by averaging the first two nodes for a road, then moves along each segment or way, averaging nodes together and at the end of the feature averages the final two nodes. To determine the average value for each way, it first calculates the maximal nearest subline, assigns a weight based on the circular error (lowest error, highest weight and vice-versa), and returns the weighted average of the two geometries. 

3) *_Cookie Cutter & Horizontal Conflation_*

_Cookie Cutter & Horizontal Conflation_ is intended for use cases where a coarse country wide data set would need to be conflated with a highly detailed and high quality city level data set. When employing this conflation type, a polygon that approximates the bounds of the more detailed data set is cut from the coarser data prior to conflation (Cookie Cutter operation). In this case the Reference layer contains the reference geometry layer i.e. the cookie cutter, whereas the Secondary layer is the dough from which the area is clipped. The following conditions apply when using a > 2 km x 2 km reference data set. To walk through a sample Horizontal Conflation use case see <<HootiD-HorizontalConflationExample>>.  Additional background on Cookie Cutter and Horizontal conflation can be found in the link:$$https://github.com/ngageoint/hootenanny/releases/download/v0.2.17/Hootenanny.-.User.Guide.pdf$$[Hootenanny User Guide].

* The bounds of layer 1 will be approximated with an alpha shape (e.g. cookie-cut) that is created by generating a convex hull for a set of data points read in the input. 
* The bounds of layer 1 will be buffered by -1km on all sides. This improves the chances of merging seems between the two layers. Note that this operation works better at the city scale then at the regional scale.
* Layer 2 (dough) is cut by the alpha shape generated by hoot from layer 1. 
* Based on the above conditions the two layers are conflated.

[[HootiD-convexhull]]
.Example of alpha shape generated with a 1km buffer around a "contrived" urban area (not an actual physical location). The blue line represents the convex hull and the red the alpha shape with the applied -1 km buffer.
image::user/images/id/hoot_convexhull_example.png[scaledwidth="40%"]

NOTE: In the user interface there is no way to tune or modify the generated alpha-shape. You can however configure the alpha-value from the command line (see alpha-shape in User Guide). In either case, the generated alpha-shape will always approximate the bounds of the data regardless of shape of the urban area.

4) *_Advanced Conflation_*

The _Advanced Conflation_ options provide users with the ability to customize a particular conflation job using a set of exposed advanced <<Advanced_Conflation_Options,options>>. These are intended for use cases where there is intimate familiarity with both the configuration parameters and the unique set of conditions that warrant their use. For example, to modify any of the Cleaning or Rubber Sheeting options when conflating rivers, users can simply expand the Cleaning Options and Waterway Options panels and modify accordingly. Note that caution should be exercised when applying these as their use may produce unexpected results. 

The advanced parameters for each conflation type can be invoked by selecting either Reference, Average or Cookie Cutter and then the triangle highlighted in the red box in <<HootiD-advanced>>. Each input (POI, Roads, Buildings) have associated parameters and therefore users may see slightly different options when using different source data. Background on each Advanced Conflation option can be found in <<Advanced_Conflation_Options>>.

[[HootiD-advanced]]
.Advanced Conflation Options. To access the Advanced Conflation Options click on triangle highlighted in the red box next to the Type.
image::user/images/id/hoot_advanced_conflate.png[scaledwidth="50%"] 

[[HootiD-AttributionRefLayer]]
===== Attribute Reference Layer

During conflation, the attributes of reference data are used to update any secondary data. By default, the reference layer contains both the reference geometry and attribution. In many cases, however, reference geometry and attribution exists across multiple layers hence the need for conflation. To support this use case, select either the reference or secondary layer as the attribute reference layer. 

===== Conflation Performance Report

Hootenanny will generate a conflation performance report containing various statistics for a particular conflation job. These parameters are discussed in more detail in the Hootenanny User Guide, Conflation Statistics Report section. To generate a report for a job, set the 'Generate Report = True' flag. A pdf document containing the performance report and its contents will be available for download from the Manage | <<HootStatsReport,Report>> tab.

.Sample page from Hootenanny Conflation Statistics Report.
image::user/images/id/hoot_csr.png[scaledwidth="50%"]

==== Reference Conflation Example: Conflating Washington DC GIS Roads against Census Tiger data.

The following example provides a simple use case conflating DC GIS Roads data against Tiger Census data using _Reference_ conflation.

For this example we’ll be using files obtained from the following sources (see <<Hoot-iD_Datasets,Importing Data>> for background on importing data into Hootenanny). For background on translating these particular data sources using the appropriate OSM tag schema see the Hootenanny User Guide, Common Use Cases. Custom translation within Hootenanny is covered further <<HootiD-Translation, here>>.

* Tiger Roads - ftp://ftp2.census.gov/geo/tiger/TIGER2012/ROADS/tl_2012_11001_roads.zip
* DC GIS Roads - http://dcatlas.dcgis.dc.gov/catalog/download.asp?downloadID=88&downloadTYPE=ESRI
 
Once the two data sets have been loaded to the map, click the conflate button to expose the configuration options. Type an output name, select type = reference, select the Attribute Reference Layer, Report Generation option and click the conflate button.

.Hootenanny reference conflation parameters. Note that Type is set to reference and the Attribute Reference Layer is DcGisRoads (attributes from the DcGisRoads layer will be used as the reference attribution during conflation).
image::user/images/id/hoot_conflate.png[scaledwidth="25%"] 

[[ConflictReview]]
===== Reviewing Conflicts

When conflating data it is inevitable that conflicts may arise due to the lack of a clear solution as a result of ambiguous relationships between matched features. When this occurs, reviewable items are flagged and presented to the user for further evaluation. In <<ConflictReview>> we can see that conflating DCGIS Roads against Tiger data resulted in 4 conflicts requiring user validation.  For each conflict a review note is displayed (shown in the red box in <<ConflictReview>>) in addition to the total number of conflicts (1 of 4) and the status of each review (Unreviewed).  Features under review will appear as highlighted in either Red and Blue along with a matching attribute table with a subset of values shown.  Clicking the cursor in any red/blue highlighted field will select the feature and the associated attribute in the left tag panel.  Note that it is also possible to toggle the displayed table on/off by clicking on the Hide/Show Table button located conflict review bar at the bottom.    

[[ReferenceConflictReview]]
.Reviewing Conflicts in Hootenanny. Washington, D.C.; Conflated DCRoads and OSM data; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_reviewconflict_dc.png[] 

When reviewing conflicts in Hootenanny, users must either accept the conflict 'as is' by clicking on the _Resolved_ button (shortcut = r) or modify the feature under review accordingly using the options described in <<ModifyLayerGeometry>>. Any edit committed by the user must be saved in the database before completing the review by clicking on the Save button on the top. Once all identified conflicts have been addressed, click on the save button under the merged layer and either export into an appropriate output format or add another data set to conflate against.  Clicking on the Save button prior to reviewing all conflicts allows users to bulk Discard/Accept All review without stepping through them individually.  

.Saving conflated data options. 
image::user/images/id/hoot_save_output.png[] 
 
[[HootiD-HorizontalConflationExample]] 
==== Cookie Cutter and Horizontal Conflation Example: Conflating Boulder, CO City Streets against OpenStreetMap data.

The following workflow describes a horizontal conflation using a Street centerline data obtained from the link:$$https://www-static.bouldercolorado.gov/docs/opendata/Streets.zip$$[City of Boulder] and a Highway data set obtained from OSM. The figure below shows the two layers displayed on top OpenStreetMap data. The dark gray lines represents the higher quality street centerline data and red lines represent the OSM highway layers for Boulder and the surrounding area. 

[[horizontalconflate_Boulder1]]
.Boulder OSM map with with roads data overlayed. Boulder, CO; Boulder city street centerline (gray), OSM highways (red); OSM Basemap.
image::user/images/id/hoot_horizontal.png[scaledwidth="50%"] 

Zooming in with relevant imagery displayed in the background, we can see that _Streets_ layer is better aligned with the background imagery and provides better coverage in the city by including more streets and alleys whereas the OSM data provides wider coverage for the surrounding area but is less detailed. 

.Verifying data on imagery. Boulder, CO; Boulder city street centerline (gray), OSM highways (red); DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_boulder_streetcenterline.png[scaledwidth="30%"] 

When using this conflation type, the first layer (cookie-cutter) will contain the reference geometry and be used to perform the cookie-cutter operation. The second layer represents the dough from which the first layer is cut. The process is depicted below in <<Cookie-Cutter_conceptual_workflow>>. In the image labeled A, the input dough layer (Boulder OSM) is shown. In image B, an alpha shape is generated around the cookie-cut region defined by Layer 1, the Boulder City Road data, with a -1 km buffer applied. The process continues with the OSM dough layer "cut" using the alpha shape (image C). Finally the two layers are combined (image D). 

[[Cookie-Cutter_conceptual_workflow]]
.Cookie Cutter and Horizontal conceptual workflow using Boulder, CO streets.
image::user/images/id/hoot_cc_concept.png[scaledwidth="50%"]

A further examination of the vector data after conflation shows that along the buffer area, the roads have been aligned and joined with all duplicate features removed.

.Zoomed-in view of horizontal conflation matched roads. 
image::user/images/id/hoot_boulder_postconflate.png[scaledwidth="30%"]
*Location*: Boulder, CO; *Vector*: Conflated centerlines and OSM data; *Map*: OSM

Viewing the workflow within the Hootenanny UI, the Boulder Streets data is added as layer 1 and the OSM Boulder Highway data set is layer 2. The user selects _Cookie Cutter & Horizontal_ as the Conflation Type and picks a layer to represent the Attribute Reference Layer then clicks Conflate.

.Two Boulder, CO roads layers added to Hootenanny. Boulder, CO; Boulder city street centerline (pink), OSM highways (blue); DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_boulder_preconflate.png[] 

The final conflated layer represents the merger of the Boulder streets layer and the OSM highways data with all duplicates removed and cookie-cut roads joined. Once the conflation process has completed, the resulting data set can be exported as a shapefile, FGDB, or WFS from the UI following the steps outlined <<Hoot-iD_Datasets,here>>.

.Boulder cookie-cutter and horizontal conflation output (green). Boulder, CO; Conflated roads data set; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_boulder_merged.png[] 

[[Poi2PoiConflation]]
==== Advanced Conflation: POI to POI conflation

Points of Interest (POI) to POI conflation is supported within Hootenanny (with conflict review) via the Advanced | POI options. When two POI layers have been added to the map, the POI options will automatically be enabled using any of the three standard conflation types. To ensure that the conflation produces reviewable results, users should enable the _Unifying_ POI options which will perform a more rigorous conflation with reviewable conflicts.  Once the appropriate Advanced Conflation Options have been selected, click _Apply_ to return or _Cancel_ to reset to default values.

.POI conflation options exposed in the Advanced Conflation Options panel. Select the _Unifying_ engine in Advanced | POI Options. POI data from OSM and Geonames.org data sources.
image::user/images/id/hoot_advanced_POI.png[scaledwidth="50%"]

The review process for POIs is slightly different from the previous Reference conflation example because of the added ability to merge POIs during review.  Merge combines the two POIs attribution into a single POI with the reference geometry and a combination of non-reference/reference attribution. When determining an appropriate review action, a user must consider whether the points represent two separate POIs (click _Resolved_ with data unmodified), a single POI (click _Merge_ button to combine attributes into Reference layer POI), or an invalid POI in which case the user might move or delete the POI(s) in question.  

[[POI2POIConflictReview]]
.Reviewing POI conflicts in Hootenanny Hootenanny. In this example, the POIs flagged for review represent a school and an arts center and were identified due to their close geographic proximity (Review note:close).    
image::user/images/id/hoot_advanced_POI_review.png[]
 
[[HootiD_GenericRiverConflation]]
==== Advanced Conflation Example: Generic River Conflation

One of the experimental options available for advanced conflation is the ability to conflate Waterways data using methods described in the link:$$https://github.com/ngageoint/hootenanny/releases/download/v0.2.17/Hootenanny.-.Developer.Guide.pdf$$[Developer Guide] in the Generic River Conflation section.  If you would like to experiment by conflating two rivers data sets, make sure that the Waterways options have been enabled in the Advanced Conflation Options panel.  Note that users will be likely required to experiment with different parameter value combinations to tune their conflation results.  Background on each options is provided in greater detail in the Developer Guide and listed in <<WaterwayOptions>>.    

.Waterway conflation options available from the Advanced Conflation Options panel. 
image::user/images/id/hoot_waterway.png[scaledwidth="25%"]

[[HootiD_Exporting]]
==== Export Conflated Data

After both conflation and reviews have been completed, users can export the conflated data set using a selected translation schema and output file format. Click on the _Export Data_ button shown below to display the export configuration page.  

.Exporting Conflated Results button.
image::user/images/id/hoot_export_results.png[] 

.Export Options. The options displayed are for exporting conflated data sets after a conflation job has completed. 
image::user/images/id/hoot_export_options.png[] 

===== Export Translation Schema

Users can select which translation schema (MGCP, LTDS 4.0, LTDS 6.1) they would like to export their data. This list will likely expand as new schemas are added to the deployed build after subsequent software releases.

===== Export Format

There are currently four options for exporting data from Hootenanny: File Geodatabase (FGDB), Shapefile, OSM and Web Feature Service (WFS). Note that FGDB, Shapefile, and OSM formats are exported as a zip file containing all of the relevant associated files, while WFS is exported as WFS Get Capabilities service URL that can be added into an OGC-enabled third party application (see <<HootiD_WFSExport,WFS Export>>). 

===== Export File Output Name
  
This is the output name of the exported file. 
  
[[Hoot-iD_Manage]]
=== Manage Hootenanny

The _Manage_ capabilities within Hootenanny provide a set of tools and data management options to help transform data into more valuable end products for the analyst. For example, an analyst can use the _Translation Assistant_ to create a custom translation between two different tag schemas for generating agency standard products used for foundation GEOINT content. Data can also be exported from the _Datasets_ tab to different file formats supported by desktop GIS applications and translated to a specific data schema to evaluate compliance to standard specifications using tools like the Geospatial Analysis Integrity Toolkit (GAIT). 

This section presents an overview of the functionality in each "Manage" tab and whenever relevant, provides a set of example workflows to showcase how the tool can be implemented using real world data sets.

Click on the Manage link in the top right-hand side of the user interface.

.Manage Button
image::user/images/id/hoot_manage.png[scaledwidth="10%"]

[[TranslationAssistant]]
==== Translation Assistant

The Translation Assistant was developed to facilitate the translation of "shoebox" (one-off or custom) data sets into Hootenanny’s internal format of OSM xml. Users must map attribute names and values from the source data set to a common schema so that conflation operations can occur. The available target schemas in the current release include OSM and TDSv61. The choice of target schema is dependent on the users fluency with said schema and how conversant they will be in defining an accurate mapping, as well as technical factors noted below. All translations end up in the internal OSM schema when stored in the database and used during conflation operations. 
 
NOTE:  Validation for some schemas, such as TDS, is more strict (does not support ad hoc tag key=values) and it only supports one FCODE type per layer. Other schemas may produce lossy results in certain directions, such as translating from OSM to TDS during export. For example, OSM will be a lossless translation target format, but if in the end, the conflated data sets will be exported to TDS, then defining the translation mapping in TDS should guarantee that mapped fields remain lossless. 

The Translation Assistant provides users with a UI driven tool to merge and translate data sets with varying schemas into common data models using standard tag schemas (OSM, TDS, etc.). The output generated from the Translation Assistant is a custom translation script that will be used to prepare data for the conflation feature matching process. 

To access the Translation Assistant, click on the Manage button and then the Translation Assistant tab to open, as shown in the figure below.

.Translation Assistant
image::user/images/id/hoot_TA_open.png[scaledwidth="60%"] 

To begin the process, users select the tag schema they want to use to define the translation mapping in. The translation schema can be changed at any time, but unexpected results may occur if more than one tag schema is used to define a single translation script.

Users must upload the data set files for which they want to define a translation. If the _Upload file(s)_ dialog is open, files chosen can be one or more shapefiles, consisting of .shp, .shx, and .dbf components at a minimum; or a zip file containing one or more shapefiles, or a folder that is a file geodatabase. If the _Upload folder_ dialog is opened, the chosen folder can contain one or more shapefiles or be a file geodatabase.

NOTE:  If the uploaded data set contains more than one layer a drop-down will be added to the UI and translation mappings should be defined for every attribute of each layer.

The translation mappings are defined at the attribute level and support one-to-one, one-to-many and many-to-one attribute-tag associations. To better illustrate the utility of this tool, a walk through example is provided using the Washington, D.C. Street Centerline data downloaded from DCGIS Open Data's data catalog (http://opendata.dc.gov/). For this example we will be using a downloaded link:$$http://opendata.dc.gov/datasets/f3b0c6a6ff5f4493b85d858e67b7400b_43.zip$$[shapefile] from the site and mapping it to the OSM Tag Schema.  

===== Notes on Custom Translations

*_One to One Mappings_*

In its simplest form, a translation mapping takes a field name and maps it to a tag key. Field values become tag values with no transformation. In this example the source data set attribute, _ST_NAME_, is mapped to the OSM tag, `name` by typing/autofill name in the field. The same process can be repeated for the attribute, _REGISTERED_, mapped to the OSM tag, `alt_name`. 

.One to One Tag Key Mapping. _ST_NAME_ in the source data is mapped to the OSM tag, `name`.
image::user/images/id/hoot_TA_one-to-one.png[scaledwidth="25%"] 

The next form involves mapping specific attribute field values to specific tag values, in addition to translating the field name to a tag key. For this example (and many others), the process of mapping attributes may involve some additional research into the proper definitions for road classifications. In some cases, attributes from source data may not have direct 1:1 relationship to OSM tags so `best match` approaches are often taken at the discretion of the analyst performing the translation. Using the link::$$http://www.fhwa.dot.gov/planning/processes/statewide/related/highway_functional_classifications/fcauab.pdf$$[Highway Functional Classification] from the Department of Transportation, we can attempt to map the values to their link::$$http://wiki.openstreetmap.org/wiki/Highways$$[OSM tag] equivalents. 

.One to One Tag Key:Value Mapping. _FUNCTIONAL_ is mapped to the OSM tag, highway, with each value set appropriately.
image::user/images/id/hoot_TA_one-to-one_key-value.png[scaledwidth="25%"] 

*_One to Many Mappings_*

One to many mappings are supported by clicking on the plus button after each new tag association has been added for a given attribute. The figure below shows a one to many mapping for the +ROUNDABOUT+ field and maps to the OSM tags +junction=roundabout+ and implies +oneway=true+. Note that this field is not present in the DC Street Centerline data and is simply used here as an example.

.One to Many Mapping Example.
image::user/images/id/hoot_TA_one-to-many.png[scaledwidth="25%"] 

*_Many to One Mappings_*

Many to one mappings are supported with the Translation Assistant UI based on the OSM semi-colon value separator. The purpose of this is to allow the user to retain any fields in their shoebox data set that would otherwise be dropped due to the lack of a corresponding tag in the target schema. The special tag key used for this feature is +extra_attributes+. All attributes mapped to this tag will be concatenated together. An example tag is `extra_attributes=speed_mph=45;city=District of Columbia;country=US`.

NOTE:  Support for this extra_attributes tag does not exist in some export schemas such as TDS. If an export schema does support the concept of a catch-all field such as _notes_ or other, Hootenanny can add support for it in the export translation capability.

*_TDS Schema_*

A key distinction when doing translations with OSM tag schemas versus the Topographic Data Store (TDS) schema is that the TDS defines feature types based on +FCODE+ values. To support this within the Translation Assistant, the user must select the appropriate FCODE type using a drop-down menu of possible supported TDS feature types and proceed with the schema mapping. This FCODE restricts the set of available tags and is assumed to apply to every feature in the layer.

NOTE:  The TDS translation option only supports one feature type per translation layer.

==== Notional Custom Translation Example: Washington, D.C. Street Centerlines

To start a custom translation in the Translation Assistant select the appropriate tag schema, which in this case is OSM. Then click on the _Upload file(s)_ button select the `Street_Centerlines_-_Light.shp`, `Street_Centerlines_-_Light.shx`, and `Street_Centerlines_-_Light.dbf` files. Once loaded, the Translation Assistant displays that this particular file contains 36 attributes and the user has the option of mapping all or a select number of them to their corresponding OSM tag. For each attribute in the file, the user has the following options:

* Create an attribute mapping. Users add a new tag relationship by clicking on the plus sign and typing the name of the corresponding tag to add in the field.
* Save the mapping. Users click Next to save a mapping and advance to the next attribute.
* Ignore the attribute. Users click the Ignore button to ignore that attribute in the translation.
* Skip the attribute. Users click on the backward or forward arrows next to each attribute name (e.g. < 2 of 36 > ), to skip past that attribute. 

NOTE: You must select either Ignore or Next to save a mapping for an attribute. Using the arrow icons to skip the attribute will cause any unsaved mappings for that attribute to be lost.

The first attribute presented in this translation is _DESCRIPTION_ which is a local functional street classification system. The closest OSM tag for this `ref:road:type` which supports values such as `avenue`, `boulevard`, `circle`, etc. Proceeding the next attribute, _DIRECTIONALITY_, this maps to the OSM key `oneway` whose values are `oneway=yes/no`. In this case you can simply set any value with One Way to `yes` and Two way to `no`. The vast majority of the attributes are unique the DCGIS Open Data format and can therefore be ignored by clicking the Ignore button. An X will now appear in the box next to each ignored field indicating that it will be ignored in the translation file. Moving through the attributes, another field of interest is _FUNCTIONAL_, a feature class code that denotes highway functional class of the road based on link::$$http://www.fhwa.dot.gov/planning/processes/statewide/related/highway_functional_classifications/fcauab.pdf$$[NHS standards]. For this example, the user should type the OSM tag `highway` and then expand the value options to set each _FUNCTIONAL_ value to the appropriate highway tag by clicking on the taxonomy icon next to the field. For each unique value you'll need to create the appropriate mapping so for instance in this case, _Collector_ could map to `tertiary`, _Interstate_ to `primary`, _Local_ to `unclassified` _Minor Arterial_ to `secondary`, _Other Freeway and Expressway_ to `motorway` and _Principal Arterial_ to `primary`. Click 'Next' to save the mapping. 

Attributes such as _OWNERSHIP_, _STNAME_, _SHAPE_LENGTH_, and _REGISTERED_ represent fields where you would want the attribute value to correspond directly to the tag value, e.g. `NAME=Main St. -> Geographic Name Information : Full Name=Main. St.`. These fields can be mapped to the OSM tags, `ownership`, `name`, `length` and `alt_name`, repectively. 

NOTE:  After entering name, the user can either press Tab or Enter to select the first option or click the desired option from the list. To register a tag key not found in the lookup press Tab or Enter. To register a tag key that is a substring of a lookup key, use the Backspace button to remove the auto-completed portion of the string and press Tab or Enter. To dismiss an incomplete tag key press Escape. To remove a defined tag mapping click the X icon.

Once all attributes have been either mapped or ignored, a _Save Translation_ button will appear at the bottom. To review the full list simple click on any attribute name to expand the list. A check will appear for all mapped attributes and a X for all ignored. It is important to note that while the Translation Assistant covers the vast majority of schema mapping use cases, there will invariably be situations that require a more complex set of conditions such as a dependency on multiple fields to set a tag value. For these cases, there are javascript examples in the %HOOT_HOME/translation directory of the install that can provide better guidance and any specific questions can be directed the hootenanny support email Hootenanny.Help@DigitalGlobe.com.

.The translation mapping can be saved once all attributes have been defined. 'X' boxes indicate ignored attributes while checked boxes are mapped.
image::user/images/id/hoot_TA_save_trans.png[scaledwidth="25%"] 

Clicking Save Translation downloads the newly created custom translation javascript file to the users local desktop. The content of this file can be subsequently pasted into a new Translation named DC_Streets under the <<HootiD-Translation,Translation>> tab. Finally when <<Hoot-iD_Datasets,importing>> the DC Street Centerline data set into Hootenanny, the user applies this translation to ensure that the necessary attribution is maintained in the file during conflation. For this particular example, the associated javascript will appear as below:

------
hoot.require('translation_assistant')

var attributeMapping = {
    "Street_Centerlines_-_Light": {
        "FUNCTIONAL": {
            "highway": {
                "Collector": "tertiary",
                "Interstate": "primary",
                "Local": "unclassified",
                "Minor Arterial": "secondary",
                "Other Freeway and Expressway": "motorway",
                "Principal Arterial": "primary"
            }
        },
        "INSERVICED": "IGNORED",
        "ISALIAS": "IGNORED",
        "LEFTZIPCOD": "IGNORED",
        "LIFECYCLES": "IGNORED",
        "NHSTYPE": "IGNORED",
        "OBJECTID": "IGNORED",
        "OBJECTID_1": "IGNORED",
        "OWNERSHIP": {
            "operator": "OWNERSHIP"
        },
        "STREETTYPE": "IGNORED",
        "STTYPEID": "IGNORED",
        "ST_NAME": {
            "name": "ST_NAME"
        },
        "TOLEFTADDR": "IGNORED",
        "TOLEFTTHEO": "IGNORED",
        "TORIGHTADD": "IGNORED",
        "TORIGHTTHE": "IGNORED",
        "UPDATETIME": "IGNORED",
        "USPS_ABBRE": "IGNORED",
        "DESCRIPTIO": {
            "ref:road:type": {
                "AVENUE": "avenue",
                "BOULEVARD": "boulevard",
                "BRIDGE": "other",
                "CIRCLE": "circle",
                "COURT": "other",
                "CRESCENT": "other",
                "DRIVE": "drive",
                "EXPRESSWAY": "motorway",
                "FREEWAY": "motorway",
                "GREEN": "motorway",
                "INTERSTATE": "motorway",
                "KEYS": "other",
                "LANE": "lane",
                "LOOP": "other",
                "PARKWAY": "limited_access_motorway",
                "PLACE": "place",
                "PROMENADE": "boulevard",
                "ROAD": "road",
                "ROW": "other",
                "SQUARE": "other",
                "STREET": "street",
                "TERRACE": "terrace",
                "WAY": "other"
            }
        },
        "DIRECTIONA": {
            "oneway": {
                "One Way (Digitizing direction)": "yes",
                "One way (Against digitizing direction)": "yes",
                "Two way": "no"
            }
        },
        "FROMLEFTAD": "IGNORED",
        "FROMLEFTTH": "IGNORED",
        "FROMRIGHTA": "IGNORED",
        "FROMRIGHTT": "IGNORED",
        "QUADCODE": "IGNORED",
        "QUADRANT": "IGNORED",
        "REGISTERED": {
            "alt_name": "REGISTERED"
        },
        "RIGHTZIPCO": "IGNORED",
        "ROADTYPE": "IGNORED",
        "ROADWAYSEG": "IGNORED",
        "SHAPE_Leng": {
            "length": "SHAPE_Leng"
        },
        "SOURCEID": "IGNORED",
        "STCODE": "IGNORED",
        "STREETID": "IGNORED",
        "STREETSEGI": "IGNORED"
    }
};
var fcode;
var schema;

//translateToOSM - takes 'attrs' and returns OSM 'tags'
var translateToOSM = function(attrs, layerName) {
    return translation_assistant.translateAttributes(attrs, layerName, attributeMapping, fcode, schema);
};

------

[[HootiD-Translation]]
==== Translations

The Translation tab contains all of the predefined translations (MGCP, OSM, TDSv40, TDSv61) in addition to any custom translations that have been saved. To add a new translation, click on the _Add New Translation_ button. Populate the Name and Description fields in this form and copy/paste the javascript generated from the saved custom translation. This will save your custom translation to the list of available translations. 

.Managing Translations. Clicking on the Translation tab opens the list of available translation files that can be used for importing new data. 
image::user/images/id/hoot_translation_tab.png[scaledwidth="50%"] 

.Add new translation form. Clicking Add New Translation opens a dialog box to enter custom translation info. 
image::user/images/id/hoot_new_translation.png[scaledwidth="50%"]  

[[Hoot-iD_Datasets]]
==== Importing/Exporting Data into Hootenanny

The Dataset tab allows users to import/export data sets using a corresponding translation schema. 

.Manage Datasets tab. 
image::user/images/id/hoot_dataset_tab.png[scaledwidth="75%"]   

To import data into Hootenanny, click on the _Add Dataset_ button in the Dataset tab to bring up the Add Data menu shown in <<AddNewData>>. For _Import Type_, users can select either a single file (.osm, .shp, .zip), a GEONAMES data set from geonames.org or a folder for  ESRI FileGeoDatabase (FGDB) files. It is possible to merge multiple files during import but note that these datasets will get merged into a single layer in Hootenanny. Currently there is no support for importing zip files containing one or more .osm files (multiple .osm files can be merged into a single layer as long as they are not inside of a .zip).

[[AddNewData]]
.Importing data into Hootenanny. 
image::user/images/id/hoot_import.png[scaledwidth="25%"]

To export a data set, click on the export icon and select the translation schema, format, and output name for the file. The export options include File Geodatabase, Shapefile, Web Feature Service (WFS), or OSM.

.Export Datasets
image::user/images/id/hoot_export.png[scaledwidth="75%"] 

Click on the trash can icon to delete any dataset from the hootenanny database.

[[HootiD_WFSExport]]
==== WFS Exports

The WFS Export tab lists all of the available WFS Services that have been generated from previous conflation jobs. Click on the up arrow icon to display the WFS Resource URL. Copy/Paste the URL into a third party application that supports WFS. Note that the URL provided is the full GetCapabilities document describing the service. 

.WFS Exports tab. A list of all user generated WFS services will appear here.
image::user/images/id/hoot_wfs.png[] 

Example Hootenanny generated WFS URL:

------
URL:  http://localhost:8080/hoot-services/ogc/ex_f7e41fccf46343b6987d003c5a83c9a3?service=WFS&version=1.1.0&request=GetCapabilities
------

[[Hoot-iD_Basemap]]
==== Manage Basemaps

Hootenanny provides users with the capability to generate their own custom basemap service using a georeferenced image. Currently Hootenanny only supports GeoTIFF or png file types. To generate a new basemap that can be displayed in Hootenanny, click on the Basemap tab and the _New Basemap_ button. Use the file browser to upload your local georeferenced image (GeoTIFF or png only). 

.Creating New Basemaps
image::user/images/id/hoot_basemap.png[] 

When the file has finished processing, you will see a crossed through eye indicating that the basemap is available but disabled. To enable, simply click on the eye icon and select it from the available background imagery layers. Note that larger imagery files will take additional time to process on the server.

.Managing Basemaps
image::user/images/id/hoot_basemap2.png[] 

Select the uploaded Basemap listed in the Background Settings button as shown below.

.Viewing Basemap in Hootenanny. Rome, Italy; 2012 WorldView-2 DigitalGlobe image displayed in Natural Color.
image::user/images/id/hoot_view_basemap.png[] 

===== Hoot UI Logs

Users have the option to export the full log generated from Hootenanny by going to the Log tab and clicking on Export Full Log. This is particularly useful for troubleshooting and debugging and will help us determine the nature of a particular issue that might be occurring with the Hootenanny deployment on site. 
Any additional questions can be emailed to hootenanny.help@digitalglobe.com. 

.Hootenanny Log File
image::user/images/id/hoot_logfile.png[] 

[[HootStatsReport]]
===== Reports

The Reports tab contains all of the generated reports for conflation jobs where Generate Report = True has been specified. To download a report, click on the arrow and save the file to your local desktop.

.Hootenanny Conflation Statistic Reports
image::user/images/id/hoot_csr_tab.png[]

=== About Hootenanny

The version of Hootenanny can be found by clicking on the Hootenanny link located in the top left hand corner of the UI. Having this information available is particularly useful when troubleshooting or testing.

.About Hoot
image::user/images/id/hoot_about.png[] 

.Hootenanny Version info
image::user/images/id/hoot_version.png[] 

[[Advanced_Conflation_Options]]
== Appendix: Hootenanny Advanced Parameters

The following advanced configuration parameters are provided to the user via the Advanced Conflation option. 

[[Advanced_Cleaning_Options]]
=== Cleaning Options

* *Enabled*: allows map cleaning operators to be applied during conflation.
* *Remove Duplicate Way*: Remove duplicate ways (lines) that are exact duplicates. If the lines partially overlap with exactly the same geometry then only the partial overlap is removed from the more complex geometry.
* *Duplicate Name Remover Case Sensitive*: Removes duplicate names when their case also matches otherwise ignore case when removing.
* *Remove Superfluous Way*: Remove all ways that contain no nodes or all the nodes are exactly the same.
* *Remove Unlikely Intersections*: Remove implied intersections that are likely incorrect. For example, a motorway overpass intersecting a residential street at a 90° is considered unlikely and "unsnapped". The geometry location is not modified.
* *DualWay Splitter*: Split highway types that are marked as divided into two separate geometries marked as oneway roads. A number of assumptions must be made to do this including assumptions about the direction of travel on roads (right or left hand drivers).
* *Implied Divided Marker*: If two roads implicitly should be marked as divided based on the surrounding roads, mark it as such. This is primarily caused by the FACC+ spec which does not allow bridges to be marked as divided.
* *Small Way Merger*: Merge any ludicrously small ways that have essentially the same attributes. Things like `UUID` are ignored. See `small.way.merger.threshold` for setting the threshold value.
* *Small Way Merger Threshold*: If highways are smaller than threshold and the tags matched then they will be merged together into a single way.
* *Remove Empty Areas*: Remove all area elements that have a area of zero.
* *Remove Duplicate Areas*: Remove any area elements that are essentially the same.
* *Remove No Information Element*: Remove any elements that don't have any tags with information. (E.g. only contains UUID and source, but not FCODE equivalent or other informative tags).

[[RubberSheetingOptions]]
=== Rubber Sheeting Options

* *Enabled*: Enables Rubber Sheeting options. 
* *Rubber Sheet Ref*: Provides a rubber sheet transform for moving input 2 towards input 1. If not enabled, both inputs are moved towards each other.
* *Rubber Sheet Minimum Ties*: Sets the minimum number of tie points that will be used when calculating a rubber sheeting solution.

[[GeneralConflationOptions]]
=== General Conflation Options

* *Unify Optimizer Time Limit*: The maximum amount of time in seconds to wait for the optimizer to complete. A value of -1 makes the time limit unlimited. If this value is set to something other than -1 your conflation results may change between multiple runs. Especially if the machine Hoot is running on is under heavy load. If the "CM Score:" value is changing between runs and GLPK isn't finding an optimal solution then this is likely causing different output. Just because the output is changing doesn't mean it is wrong, but this can be problematic if you're doing testing or expecting repeatable output for other
* *OGR Split O2S*: If the list of o2s tags is > 255 char, split it into into 254 char long pieces. If this is false, it will be exported as one big string.
* *OGR TDS Add FCSubtype*: Add the ESRI specific FCSUBTYPE field to the output.
* *OGR TDS Structure*: Exports TDS data in Thematic Groups (TransportationGroundCrv, StructurePnt etc) instead of one FCODE per file/layer (ROAD_L, BUILDING_P etc). 

[[RoadOptions]]
=== Road Options

* *Engines*

** *Unify*: Unify incorporates more recent conflation algorithms that process the routines into a single process flow and flag reviewable items to the user. This is the default conflation engine.
** *Disabled*: Disables the road conflation engine altogether.
** *Greedy*: Uses 'Greedy' optimization to determine a good set of matches based on conflation routine designs from 2012 (See Hootenanny - Algorithms Guide for more background). This approach only deals with roads and does not flag questionable situations as reviews. Conceptual it uses the following steps

.Find the best unconflated road match between two maps
.Merge the matched roads and mark the result as conflated
.Repeat

(if `Unify` enabled):

* *Search Radius Highway*: The search radius to use when conflating highways. If two features are within the search radius then they will be considered for conflation. If the value is -1 then the circular error will be used to calculate an appropriate search radius.
* *Highway Matcher Heading Delta*: The distance around a point on a way to look when calculating the heading. A larger value will smooth out the heading values on a line. A smaller value will make the heading values correspond directly to the heading on the way at that point. This is primarily used in subline matching. Values are in meters.
* *Highway Matcher Max Angle*: Sets that maximum angle that is still considered a highway match. Units in degrees.
* *Way Merger Min Split Size*: The minimum size that a way should be split into for merging. Units in meters.

[[BuildingOptions]]
=== Building Options

* *Enabled*: Enables building conflation options.
* *Search Radius Building*: The search radius to use when conflating buildings. Currently not implemented.

[[POIOptions]]
=== POI Options

* *Enabled*: Enables POI conflation options.
* *POI Options*: POI conflation engine to be used. 

** *Places*: Conflates POIs using the  PLACES algorithms which looks for name similarity and geographic proximity. Predates the Unify conflation engine which incorporates additional business logic and review similar to unify road conflation. See Hootenanny - Algorithms Guide for more detail.
** *Unify*: Conflates POIs with Unify algorithm routines into a single process flow and flag reviewable items to the user. See Hootenanny - Algorithms Guide for more detail.
** *Disabled*: Disables the POI conflation options.

[[WaterwayOptions]]
=== Waterway Options
The Waterway options have been pre-populated with default values based on generic river matching work discussed in the Hootenanny - Developer Guide. These can be modified if the user has deeper familiarity with the parameters. Waterway options are disabled by default.

* *Enabled*: Enables waterway conflation options below.
* *Waterway Angle Sample Distance*: Distance used for sampling during angle histogram extraction with the SampledAngleHistogramExtractor. Values are in meters.
* *Waterway Matcher Heading Delta*: The distance around a point on a way to look when calculating the heading. A larger value will smooth out the heading values on
a line. A smaller value will make the heading values correspond directly to the heading on the way at that point. This is primarily
used in subline matching. Values are in meters.
* *Waterway Auto Calc Search Radius*: Auto calculates the search radius using the circular error. 
* *Search Radius Waterway*: Search radius value to overide the auto calculated radius. Waterway Auto Calc Search Radius must be unchecked to enter value.
* *Waterway Rubber Sheet Minimum Ties*: Minimum tie points to use for rubber sheeting.
* *Waterway Rubber Sheet Ref*: Provides a rubber sheet transform for moving input 2 towards input 1. If not enabled, both inputs are moved towards each other.
