
[[HootenannyVagrantSetup]]
== Using Vagrant to set up a Development Hootenanny Instance 
 
To make the installation process simpler for users who wish to set up a Hootenanny instance within a virtual environment, we have provided a pre-configured Vagrant file that can be easily deployed assuming the user can install and use Vagrant within their particular development environment.  link:$$https://docs.vagrantup.com/v2/$$[Vagrant] is an open source software application that works with common VM providers such as link:$$https://www.virtualbox.org/[Oracle VirtualBox] or link:$$http://www.vmware.com/$$[VMWare] to deploy any scriptable application stack in an automated and configurable manner.  It can be installed on Windows, MacOS X, Linux (DEB) and Linux (RPM). Using the recommended minimum parameters from <<CreateHootVM>>, we have packaged a Vagrant file that will build Hootenanny with all of the necessary dependencies assuming you are working within a supported Operating System such as Windows, Ubuntu, or CentOS/RHEL 6.5. Note that this is typically practical from a physical machine rather than a virtualized environment since the Vagrant file itself creates a corresponding VM.  The following instructions can be used as a general template for working with Vagrant but it should be noted that this feature is presently a Beta effort that will mature hopefully as the process evolves over time.  There is no guarantee that it will work in all circumstances without additional troubleshooting.  Instructions for installing on Ubuntu can also be found in the VAGRANT.MD file located in $HOOT_HOME/ directory.  

=== Download and Install Vagrant

Vagrant can be downloaded from GitHub or from the website, http://www.vagrantup.com/downloads.  Note that this application is a liberally licensed open source project that is actively link:$$https://github.com/mitchellh/vagrant$$[developed and maintained] within the open source community.  

Note: You do not need to run through the `vagrant init` steps to generate a vm.  The preconfigured Vagrantfile has already been created for you with Ubuntu 14.04 and the recommended minimum VM specifications.  If you wish to modify any setting you can do so by making the appropriate changes to the Vagrantfile itself in %HOOT_HOME%

=== Set up local hoot repository	

You will need to clone the hoot repository to a local directory in order to use the provided Vagrantfile.  Assuming you have the required credentials to access the hoot repo, proceed with the following steps:

Once Vagrant has been installed, you can start an environment by checking out the hoot code and running the `vagrant up` command within a suitable bash or terminal shell.  

--------------------------------------
git clone git@build:hootenanny hoot
cd hoot
git submodule init
git submodule update
vagrant up
--------------------------------------
  
Note that this process can take a up to two hours to download required software from the internet and set it up as a running system.  

=== Modify the Vagrantfile

uncomment the '#, group: "tomcat6"' portion of the in Vagrantfile to allow the webapp to write to shared folders.

--------------------------------------
    # argument is a set of non-required options.
    config.vm.synced_folder ".", "/home/vagrant/hoot", group: "tomcat6"
    # UNCOMMENT group after inital provisioning, then run vagrant reload
--------------------------------------

=== Reload 

After removing the commented tomcat6 portion in the Vagrantfile, you'll need to run the reload command in order for the changes to take effect on the vm:

--------------------------------------
vagrant reload
--------------------------------------
 
=== Testing Hootenanny Instance

It is recommended that you validate your instance to confirm that it was installed properly.  Any hoot commands can be used for this process but the most recommended is to run the `make test` to confirm that everything is functioning properly.

--------------------------------------
cd hoot
source ./SetupEnv.sh
make test
--------------------------------------

From a Chrome browser, open the url http://localhost:8888/hootenanny-id.  If the build and deploy was successful, you should see the web application come up with a default imagery service displayed.  If there are errors, see below section.

=== Troubleshooting Vagrant

It is not uncommon for hiccups to occur within the build process and the following steps might prove useful when troubleshooting

==== Provision 

The provision command will verify that the dependencies have been downloaded and installed.  You can run this using the command below.

--------------------------------------
vagrant provision
--------------------------------------

If any errors are shown in the console, you may need to run the deploy step manually.  Fortunately this requires running one script.  

==== Manual Build and Deploy

If the tomcat web services do not deploy or the hoot software has not built from source properly, you can simply run the following to manually step through the process.
Vagrant allows you to ssh into the instance using `vagrant ssh`.  You'll want to run two scripts, ezClean and ezBuildAll.sh to verify that hoot has been built.  Finally, you'll need to make sure that tomcat deploys the web services.

--------------------------------------
vagrant ssh
    cd hoot
    source ./SetupEnv.sh
    scripts/ezClean.sh
    scripts/ezBuildAll.sh
    sudo -u tomcat6 scripts/vagrantDeployTomcat.sh
	
--------------------------------------

Note:  The default user/pw is vagrant/vagrant but you'll want to modify that to meet your security requirements.

